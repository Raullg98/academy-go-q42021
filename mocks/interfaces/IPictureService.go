// Code generated by mockery v2.9.4. DO NOT EDIT.

package mocks

import (
	models "go_project/models"

	mock "github.com/stretchr/testify/mock"
)

// IPictureService is an autogenerated mock type for the IPictureService type
type IPictureService struct {
	mock.Mock
}

// GetPictureFromDate provides a mock function with given fields: date
func (_m *IPictureService) GetPictureFromDate(date string) (*models.Picture, error) {
	ret := _m.Called(date)

	var r0 *models.Picture
	if rf, ok := ret.Get(0).(func(string) *models.Picture); ok {
		r0 = rf(date)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.Picture)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(date)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetPictures provides a mock function with given fields: criteria, items, itemsPerWorker
func (_m *IPictureService) GetPictures(criteria string, items int, itemsPerWorker int) ([]models.Picture, error) {
	ret := _m.Called(criteria, items, itemsPerWorker)

	var r0 []models.Picture
	if rf, ok := ret.Get(0).(func(string, int, int) []models.Picture); ok {
		r0 = rf(criteria, items, itemsPerWorker)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]models.Picture)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, int, int) error); ok {
		r1 = rf(criteria, items, itemsPerWorker)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
